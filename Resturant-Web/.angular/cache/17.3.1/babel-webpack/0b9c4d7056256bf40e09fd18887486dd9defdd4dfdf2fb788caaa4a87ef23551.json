{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/environment\";\nexport class CategoryService {\n  constructor(http, globalEnv) {\n    this.http = http;\n    this.globalEnv = globalEnv;\n  }\n  addCategory(formData) {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${token}`\n    });\n    return this.http.post(this.globalEnv.url + 'Category/addCategory', formData, {\n      headers,\n      responseType: 'json'\n    });\n  }\n  deleteCategory(categoryId) {\n    const token = localStorage.getItem('token');\n    const header = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    });\n    return this.http.delete(`${this.globalEnv.url}Category/deleteCategory/${categoryId}`, {\n      headers: header,\n      responseType: 'text'\n    });\n  }\n  modifyCategory(formData) {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${token}`\n    });\n    return this.http.post(this.globalEnv.url + 'Category/modifyCategory', formData, {\n      headers: headers,\n      responseType: 'text'\n    });\n  }\n  static #_ = this.ɵfac = function CategoryService_Factory(t) {\n    return new (t || CategoryService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.GlobalEnvironment));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CategoryService,\n    factory: CategoryService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","CategoryService","constructor","http","globalEnv","addCategory","formData","token","localStorage","getItem","headers","Authorization","post","url","responseType","deleteCategory","categoryId","header","delete","modifyCategory","_","i0","ɵɵinject","i1","HttpClient","i2","GlobalEnvironment","_2","factory","ɵfac","providedIn"],"sources":["D:\\Angular\\CenterApp\\src\\app\\homepage\\categories\\categories.service.ts"],"sourcesContent":["import { HttpClient, HttpHandler, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { GlobalEnvironment } from 'src/app/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CategoryService {\r\n  constructor(private http: HttpClient, private globalEnv: GlobalEnvironment) {}\r\n  addCategory(formData: FormData): Observable<any> {\r\n    const token = localStorage.getItem('token');\r\n    const headers = new HttpHeaders({\r\n      Authorization: `Bearer ${token}`,\r\n    });\r\n    return this.http.post(\r\n      this.globalEnv.url + 'Category/addCategory',\r\n      formData,\r\n      { headers, responseType: 'json' }\r\n    );\r\n  }\r\n  deleteCategory(categoryId: string): Observable<any> {\r\n    const token = localStorage.getItem('token');\r\n    const header = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    });\r\n    return this.http.delete(\r\n      `${this.globalEnv.url}Category/deleteCategory/${categoryId}`,\r\n      { headers: header, responseType: 'text' }\r\n    );\r\n  }\r\n  modifyCategory(formData: FormData): Observable<any> {\r\n    const token = localStorage.getItem('token');\r\n    const headers = new HttpHeaders({\r\n      Authorization: `Bearer ${token}`,\r\n    });\r\n    return this.http.post(\r\n      this.globalEnv.url + 'Category/modifyCategory',\r\n      formData,\r\n      {\r\n        headers: headers,\r\n        responseType: 'text',\r\n      }\r\n    );\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAAkCA,WAAW,QAAQ,sBAAsB;;;;AAQ3E,OAAM,MAAOC,eAAe;EAC1BC,YAAoBC,IAAgB,EAAUC,SAA4B;IAAtD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,SAAS,GAATA,SAAS;EAAsB;EAC7EC,WAAWA,CAACC,QAAkB;IAC5B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,OAAO,GAAG,IAAIV,WAAW,CAAC;MAC9BW,aAAa,EAAE,UAAUJ,KAAK;KAC/B,CAAC;IACF,OAAO,IAAI,CAACJ,IAAI,CAACS,IAAI,CACnB,IAAI,CAACR,SAAS,CAACS,GAAG,GAAG,sBAAsB,EAC3CP,QAAQ,EACR;MAAEI,OAAO;MAAEI,YAAY,EAAE;IAAM,CAAE,CAClC;EACH;EACAC,cAAcA,CAACC,UAAkB;IAC/B,MAAMT,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMQ,MAAM,GAAG,IAAIjB,WAAW,CAAC;MAC7B,cAAc,EAAE,kBAAkB;MAClCW,aAAa,EAAE,UAAUJ,KAAK;KAC/B,CAAC;IACF,OAAO,IAAI,CAACJ,IAAI,CAACe,MAAM,CACrB,GAAG,IAAI,CAACd,SAAS,CAACS,GAAG,2BAA2BG,UAAU,EAAE,EAC5D;MAAEN,OAAO,EAAEO,MAAM;MAAEH,YAAY,EAAE;IAAM,CAAE,CAC1C;EACH;EACAK,cAAcA,CAACb,QAAkB;IAC/B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,OAAO,GAAG,IAAIV,WAAW,CAAC;MAC9BW,aAAa,EAAE,UAAUJ,KAAK;KAC/B,CAAC;IACF,OAAO,IAAI,CAACJ,IAAI,CAACS,IAAI,CACnB,IAAI,CAACR,SAAS,CAACS,GAAG,GAAG,yBAAyB,EAC9CP,QAAQ,EACR;MACEI,OAAO,EAAEA,OAAO;MAChBI,YAAY,EAAE;KACf,CACF;EACH;EAAC,QAAAM,CAAA,G;qBArCUnB,eAAe,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,iBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAf1B,eAAe;IAAA2B,OAAA,EAAf3B,eAAe,CAAA4B,IAAA;IAAAC,UAAA,EAFd;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
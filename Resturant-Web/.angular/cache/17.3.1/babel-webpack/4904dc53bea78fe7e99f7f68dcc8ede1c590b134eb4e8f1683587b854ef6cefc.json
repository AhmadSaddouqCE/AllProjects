{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../environment\";\nexport class LoginServices {\n  constructor(http, globarEnv) {\n    this.http = http;\n    this.globarEnv = globarEnv;\n    this.messageSubject = new BehaviorSubject('');\n    this.sendName = new BehaviorSubject('');\n    this.sendEmail = new BehaviorSubject('');\n    this.sendPassword = new BehaviorSubject('');\n    this.sendId = new BehaviorSubject(0);\n    this.sendCity = new BehaviorSubject('');\n    this.sendCountry = new BehaviorSubject('');\n    this.sendAddress = new BehaviorSubject('');\n    this.sendDate = new BehaviorSubject('');\n    this.sendPhone = new BehaviorSubject('');\n  }\n  ngOnInit() {}\n  getId() {\n    return this.sendId.asObservable();\n  }\n  setId(Id) {\n    this.sendId.next(Id);\n  }\n  getCity() {\n    return this.sendCity.asObservable();\n  }\n  setCity(City) {\n    this.sendCity.next(City);\n  }\n  getCountry() {\n    return this.sendCountry.asObservable();\n  }\n  setCountry(Country) {\n    this.sendCountry.next(Country);\n  }\n  getDate() {\n    return this.sendDate.asObservable();\n  }\n  setDate(dateofbirth) {\n    this.sendDate.next(dateofbirth);\n  }\n  getAddress() {\n    return this.sendAddress.asObservable();\n  }\n  setAddress(address) {\n    this.sendAddress.next(address);\n  }\n  getPhone() {\n    return this.sendPhone.asObservable();\n  }\n  setPhone(phone) {\n    this.sendPhone.next(phone);\n  }\n  getName() {\n    return this.sendName.asObservable();\n  }\n  setName(name) {\n    this.sendName.next(name);\n  }\n  getEmail() {\n    return this.sendEmail.asObservable();\n  }\n  setEmail(email) {\n    this.sendEmail.next(email);\n  }\n  getPassword() {\n    return this.sendPassword.asObservable();\n  }\n  setPassword(password) {\n    this.sendPassword.next(password);\n  }\n  getMessage() {\n    return this.messageSubject.asObservable();\n  }\n  setMessage(message) {\n    this.messageSubject.next(message);\n  }\n  isLoggedInAdmin() {\n    const isAdmin = localStorage.getItem('admin') === 'true';\n    const hasToken = !!localStorage.getItem('token');\n    return isAdmin && hasToken;\n  }\n  isLoggedInCustomer() {\n    const isCustomer = localStorage.getItem('Customer') === 'true';\n    const hasToken = !!localStorage.getItem('token');\n    return isCustomer && hasToken;\n  }\n  LoginAdmin(formData) {\n    return this.http.post(this.globarEnv.url + 'Admin/loginAdmin', formData, {\n      responseType: 'text'\n    });\n  }\n  static #_ = this.ɵfac = function LoginServices_Factory(t) {\n    return new (t || LoginServices)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.GlobalEnvironment));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginServices,\n    factory: LoginServices.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","LoginServices","constructor","http","globarEnv","messageSubject","sendName","sendEmail","sendPassword","sendId","sendCity","sendCountry","sendAddress","sendDate","sendPhone","ngOnInit","getId","asObservable","setId","Id","next","getCity","setCity","City","getCountry","setCountry","Country","getDate","setDate","dateofbirth","getAddress","setAddress","address","getPhone","setPhone","phone","getName","setName","name","getEmail","setEmail","email","getPassword","setPassword","password","getMessage","setMessage","message","isLoggedInAdmin","isAdmin","localStorage","getItem","hasToken","isLoggedInCustomer","isCustomer","LoginAdmin","formData","post","url","responseType","_","i0","ɵɵinject","i1","HttpClient","i2","GlobalEnvironment","_2","factory","ɵfac","providedIn"],"sources":["D:\\Angular\\CenterApp\\src\\app\\login\\login.service.ts"],"sourcesContent":["import { BehaviorSubject, Observable } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Component, Injectable, OnInit } from '@angular/core';\r\nimport { GlobalEnvironment } from '../environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LoginServices {\r\n  constructor(private http: HttpClient, private globarEnv: GlobalEnvironment) {}\r\n  ngOnInit() {}\r\n  private messageSubject = new BehaviorSubject<string>('');\r\n  private sendName = new BehaviorSubject<string>('');\r\n  private sendEmail = new BehaviorSubject<string>('');\r\n  private sendPassword = new BehaviorSubject<string>('');\r\n  private sendId = new BehaviorSubject<number>(0);\r\n  private sendCity = new BehaviorSubject<string>('');\r\n  private sendCountry = new BehaviorSubject<string>('');\r\n  private sendAddress = new BehaviorSubject<string>('');\r\n  private sendDate = new BehaviorSubject<string>('');\r\n  private sendPhone = new BehaviorSubject<string>('');\r\n\r\n  getId() {\r\n    return this.sendId.asObservable();\r\n  }\r\n  setId(Id: number) {\r\n    this.sendId.next(Id);\r\n  }\r\n  getCity() {\r\n    return this.sendCity.asObservable();\r\n  }\r\n  setCity(City: string) {\r\n    this.sendCity.next(City);\r\n  }\r\n  getCountry() {\r\n    return this.sendCountry.asObservable();\r\n  }\r\n  setCountry(Country: string) {\r\n    this.sendCountry.next(Country);\r\n  }\r\n\r\n  getDate() {\r\n    return this.sendDate.asObservable();\r\n  }\r\n  setDate(dateofbirth: string) {\r\n    this.sendDate.next(dateofbirth);\r\n  }\r\n  getAddress() {\r\n    return this.sendAddress.asObservable();\r\n  }\r\n  setAddress(address: string) {\r\n    this.sendAddress.next(address);\r\n  }\r\n  getPhone() {\r\n    return this.sendPhone.asObservable();\r\n  }\r\n  setPhone(phone: string) {\r\n    this.sendPhone.next(phone);\r\n  }\r\n  getName() {\r\n    return this.sendName.asObservable();\r\n  }\r\n  setName(name: string) {\r\n    this.sendName.next(name);\r\n  }\r\n\r\n  getEmail() {\r\n    return this.sendEmail.asObservable();\r\n  }\r\n  setEmail(email: string) {\r\n    this.sendEmail.next(email);\r\n  }\r\n\r\n  getPassword() {\r\n    return this.sendPassword.asObservable();\r\n  }\r\n  setPassword(password: string) {\r\n    this.sendPassword.next(password);\r\n  }\r\n\r\n  getMessage() {\r\n    return this.messageSubject.asObservable();\r\n  }\r\n\r\n  setMessage(message: string) {\r\n    this.messageSubject.next(message);\r\n  }\r\n\r\n  isLoggedInAdmin(): boolean {\r\n    const isAdmin = localStorage.getItem('admin') === 'true';\r\n    const hasToken = !!localStorage.getItem('token');\r\n    return isAdmin && hasToken;\r\n  }\r\n  \r\n  isLoggedInCustomer(): boolean {\r\n    const isCustomer = localStorage.getItem('Customer') === 'true';\r\n    const hasToken = !!localStorage.getItem('token');\r\n    return isCustomer && hasToken;\r\n  }\r\n\r\n  public LoginAdmin(formData:FormData): Observable<any> {\r\n    return this.http.post(\r\n      this.globarEnv.url + 'Admin/loginAdmin',\r\n      formData,\r\n      {responseType: 'text' }\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
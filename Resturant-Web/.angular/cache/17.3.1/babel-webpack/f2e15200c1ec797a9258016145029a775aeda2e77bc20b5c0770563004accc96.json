{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../environment\";\nexport class HomepageService {\n  constructor(http, globalEnv) {\n    this.http = http;\n    this.globalEnv = globalEnv;\n  }\n  getbySearch(Element) {\n    let params = new HttpParams().set('Name', Element[0]);\n    return this.http.post(this.globalEnv.url + 'Customer/SearchForElement?' + params.toString(), null, {\n      headers: this.globalEnv.headers\n    });\n  }\n  getAllUsers() {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    });\n    return this.http.get(this.globalEnv.url + 'Customer/getAllUsers', {\n      headers\n    });\n  }\n  static #_ = this.ɵfac = function HomepageService_Factory(t) {\n    return new (t || HomepageService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.GlobalEnvironment));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HomepageService,\n    factory: HomepageService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","HttpParams","HomepageService","constructor","http","globalEnv","getbySearch","Element","params","set","post","url","toString","headers","getAllUsers","token","localStorage","getItem","get","_","i0","ɵɵinject","i1","HttpClient","i2","GlobalEnvironment","_2","factory","ɵfac","providedIn"],"sources":["D:\\Angular\\CenterApp\\src\\app\\homepage\\homepage.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { GlobalEnvironment } from '../environment';\r\nimport { Observable, map } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HomepageService {\r\n  constructor(private http: HttpClient, private globalEnv: GlobalEnvironment) {}\r\n\r\n  public getbySearch(Element: Array<string>) {\r\n    let params = new HttpParams().set('Name', Element[0]);\r\n\r\n    return this.http.post<any[]>(\r\n      this.globalEnv.url + 'Customer/SearchForElement?' + params.toString(),\r\n      null,\r\n      {\r\n        headers: this.globalEnv.headers,\r\n      }\r\n    );\r\n  }\r\n\r\n  getAllUsers(): Observable<any[]> {\r\n    const token = localStorage.getItem('token');\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    });\r\n\r\n    return this.http.get<any[]>(this.globalEnv.url + 'Customer/getAllUsers', { headers });\r\n\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAAqBA,WAAW,EAAEC,UAAU,QAAQ,sBAAsB;;;;AAQ1E,OAAM,MAAOC,eAAe;EAC1BC,YAAoBC,IAAgB,EAAUC,SAA4B;IAAtD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,SAAS,GAATA,SAAS;EAAsB;EAEtEC,WAAWA,CAACC,OAAsB;IACvC,IAAIC,MAAM,GAAG,IAAIP,UAAU,EAAE,CAACQ,GAAG,CAAC,MAAM,EAAEF,OAAO,CAAC,CAAC,CAAC,CAAC;IAErD,OAAO,IAAI,CAACH,IAAI,CAACM,IAAI,CACnB,IAAI,CAACL,SAAS,CAACM,GAAG,GAAG,4BAA4B,GAAGH,MAAM,CAACI,QAAQ,EAAE,EACrE,IAAI,EACJ;MACEC,OAAO,EAAE,IAAI,CAACR,SAAS,CAACQ;KACzB,CACF;EACH;EAEAC,WAAWA,CAAA;IACT,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMJ,OAAO,GAAG,IAAIb,WAAW,CAAC;MAC9B,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUe,KAAK;KACjC,CAAC;IAEF,OAAO,IAAI,CAACX,IAAI,CAACc,GAAG,CAAQ,IAAI,CAACb,SAAS,CAACM,GAAG,GAAG,sBAAsB,EAAE;MAAEE;IAAO,CAAE,CAAC;EAEvF;EAAC,QAAAM,CAAA,G;qBAxBUjB,eAAe,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,iBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfxB,eAAe;IAAAyB,OAAA,EAAfzB,eAAe,CAAA0B,IAAA;IAAAC,UAAA,EAFd;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
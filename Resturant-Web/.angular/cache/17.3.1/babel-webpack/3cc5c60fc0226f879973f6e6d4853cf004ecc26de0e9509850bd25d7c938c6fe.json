{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../products.service\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"src/app/header-customer/header-customer.service\";\nimport * as i6 from \"@angular/common\";\nconst _c0 = [\"nameInput\"];\nconst _c1 = [\"quantityInput\"];\nconst _c2 = [\"priceInput\"];\nconst _c3 = [\"descriptionInput\"];\nconst _c4 = [\"myFileInput\"];\nfunction AddProductComponent_ng_container_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0)(1);\n    i0.ɵɵelementStart(2, \"option\", 34);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd()();\n  }\n  if (rf & 2) {\n    const category_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", category_r2.categoryName);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", category_r2.categoryName, \" \");\n  }\n}\nexport class AddProductComponent {\n  constructor(router, fb, addProductService, currentRoute, toastr, headerCustomerService) {\n    this.router = router;\n    this.fb = fb;\n    this.addProductService = addProductService;\n    this.currentRoute = currentRoute;\n    this.toastr = toastr;\n    this.headerCustomerService = headerCustomerService;\n    this.productsListChanged = new EventEmitter();\n    this.isAccountCreated = false;\n    this.alert = true;\n    this.Message = '';\n    this.Products = [];\n    this.Categories = [];\n    this.form = this.fb.group({\n      name: [null, [Validators.required], []],\n      description: [null, [Validators.required], []],\n      price: [null, [Validators.required], []],\n      quantity: [null, [Validators.required], []],\n      categoryName: [null, [Validators.required], []]\n    });\n  }\n  ngOnInit() {\n    this.getAllCategories();\n  }\n  Check(name, price, quantity, descrption) {\n    if (name !== '' && price !== '' && quantity !== '' && descrption !== '') {\n      this.alert = true;\n      return true;\n    }\n    this.Message = 'Please Fill All The Fields';\n    return false;\n  }\n  onFileChange(event) {\n    const inputElement = event.target;\n    if (inputElement.files && inputElement.files.length > 0) {\n      this.selectedFile = inputElement.files[0];\n    }\n  }\n  getAllCategories() {\n    this.headerCustomerService.getAllCategories().subscribe({\n      next: res => {\n        this.Categories = res;\n      },\n      error: error => {\n        console.log('No Categories Found');\n      }\n    });\n  }\n  resetData() {\n    this.Message = '';\n    this.isAccountCreated = false;\n    this.nameInput.nativeElement.value = '';\n    this.priceInput.nativeElement.value = '';\n    this.descriptionInput.nativeElement.value = '';\n    this.quantityInput.nativeElement.value = '';\n    this.selectedCategoryName = '';\n    this.myFileInput.nativeElement.value = '';\n  }\n  submitForm() {\n    let checkCategoryName = this.form.value.categoryName;\n    const findCategoryIndex = this.Categories.findIndex(item => item.categoryName === checkCategoryName);\n    if (findCategoryIndex !== -1) {\n      this.categoryId = this.Categories[findCategoryIndex].categoryId;\n      if (this.selectedFile) {\n        const formData = new FormData();\n        formData.append('Name', this.form.value.name);\n        formData.append('Price', this.form.value.price);\n        formData.append('Quantity', this.form.value.quantity);\n        formData.append('Description', this.form.value.description);\n        formData.append('categoryId', this.categoryId);\n        formData.append('ProductImage', this.selectedFile);\n        this.addProductService.addProduct(formData).subscribe({\n          next: res => {\n            const message = res.message;\n            const productData = res.products;\n            if (message === \"New Product Is Created Successfully\") {\n              this.Message = 'New Product created Successfully!';\n              this.isAccountCreated = true;\n              this.productsListChanged.emit(productData);\n            }\n          },\n          error: error => {\n            if (error.status === 500 && error.error.includes('This Product already exists')) {\n              this.Message = 'Product Already Exists';\n              this.isAccountCreated = false;\n              this.resetData();\n            }\n          }\n        });\n      } else {\n        this.toastr.error('No File Selected', 'Error');\n      }\n    } else {\n      this.toastr.error(\"Category Doesn't Exist\", 'Error');\n      this.nameInput.nativeElement.value = '';\n      this.resetData();\n    }\n  }\n  static #_ = this.ɵfac = function AddProductComponent_Factory(t) {\n    return new (t || AddProductComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.productService), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i4.ToastrService), i0.ɵɵdirectiveInject(i5.headerCustomerServices));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddProductComponent,\n    selectors: [[\"app-add-product\"]],\n    viewQuery: function AddProductComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n        i0.ɵɵviewQuery(_c1, 7);\n        i0.ɵɵviewQuery(_c2, 7);\n        i0.ɵɵviewQuery(_c3, 7);\n        i0.ɵɵviewQuery(_c4, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nameInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.quantityInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.priceInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.descriptionInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.myFileInput = _t.first);\n      }\n    },\n    outputs: {\n      productsListChanged: \"productsListChanged\"\n    },\n    decls: 56,\n    vars: 5,\n    consts: [[\"nameInput\", \"\"], [\"quantityInput\", \"\"], [\"priceInput\", \"\"], [\"descriptionInput\", \"\"], [\"myFileInput\", \"\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#addUserModal\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"id\", \"addUserModal\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"addUserModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\", \"p-2\", \"mt-1\"], [\"aria-hidden\", \"true\"], [\"id\", \"addUserModalLabel\", 1, \"modal-title\"], [1, \"modal-body\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"formControlName\", \"name\", \"id\", \"name\", \"placeholder\", \"Please enter a Product Name\", 1, \"form-control\"], [\"for\", \"quantity\"], [\"type\", \"text\", \"id\", \"quantity\", \"formControlName\", \"quantity\", \"placeholder\", \"Please enter the Quantity\", 1, \"form-control\"], [\"for\", \"price\"], [\"type\", \"text\", \"id\", \"price\", \"formControlName\", \"price\", \"placeholder\", \"Please enter the Price\", 1, \"form-control\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"formControlName\", \"description\", \"placeholder\", \"Give the product some Description\", 1, \"form-control\"], [\"for\", \"Category\"], [1, \"custom-select\"], [\"id\", \"categoryName\", \"name\", \"categoryName\", \"formControlName\", \"categoryName\", 1, \"form-control\", \"mr-3\", 3, \"ngModelChange\", \"ngModel\"], [1, \"d-none\"], [4, \"ngFor\", \"ngForOf\"], [\"for\", \"photo\"], [\"type\", \"file\", \"name\", \"photo\", \"id\", \"photo\", \"accept\", \"image/*\", 1, \"form-control\", 3, \"change\"], [1, \"button-container\", \"d-flex\", \"justify-content-end\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"text-center\", \"fs-3\", 3, \"ngClass\"], [3, \"value\"]],\n    template: function AddProductComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function AddProductComponent_Template_button_click_0_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.resetData());\n        });\n        i0.ɵɵtext(1, \" Add New Product\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"br\")(3, \"br\");\n        i0.ɵɵelementStart(4, \"div\", 6)(5, \"div\", 7)(6, \"div\", 8)(7, \"div\", 9)(8, \"button\", 10)(9, \"span\", 11);\n        i0.ɵɵtext(10, \"\\u00D7\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"h4\", 12);\n        i0.ɵɵtext(12, \"Add New Product\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 13)(14, \"form\", 14);\n        i0.ɵɵlistener(\"ngSubmit\", function AddProductComponent_Template_form_ngSubmit_14_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.submitForm());\n        });\n        i0.ɵɵelementStart(15, \"div\", 15)(16, \"label\", 16);\n        i0.ɵɵtext(17, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 17, 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 15)(21, \"label\", 18);\n        i0.ɵɵtext(22, \"Quantity\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 19, 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 15)(26, \"label\", 20);\n        i0.ɵɵtext(27, \"Price\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 21, 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 15)(31, \"label\", 22);\n        i0.ɵɵtext(32, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"input\", 23, 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 15)(36, \"label\", 24);\n        i0.ɵɵtext(37, \"Choose Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"div\", 25)(39, \"select\", 26);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function AddProductComponent_Template_select_ngModelChange_39_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          i0.ɵɵtwoWayBindingSet(ctx.selectedCategoryName, $event) || (ctx.selectedCategoryName = $event);\n          return i0.ɵɵresetView($event);\n        });\n        i0.ɵɵelement(40, \"option\", 27);\n        i0.ɵɵtemplate(41, AddProductComponent_ng_container_41_Template, 4, 2, \"ng-container\", 28);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(42, \"div\", 15)(43, \"label\", 29);\n        i0.ɵɵtext(44, \"Photo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"input\", 30, 4);\n        i0.ɵɵlistener(\"change\", function AddProductComponent_Template_input_change_45_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onFileChange($event));\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(47, \"br\")(48, \"br\");\n        i0.ɵɵelementStart(49, \"div\", 31)(50, \"button\", 32);\n        i0.ɵɵlistener(\"click\", function AddProductComponent_Template_button_click_50_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const nameInput_r3 = i0.ɵɵreference(19);\n          const quantityInput_r4 = i0.ɵɵreference(24);\n          const priceInput_r5 = i0.ɵɵreference(29);\n          const descriptionInput_r6 = i0.ɵɵreference(34);\n          return i0.ɵɵresetView(ctx.Check(descriptionInput_r6.value, nameInput_r3.value, priceInput_r5.value, quantityInput_r4.value));\n        });\n        i0.ɵɵtext(51, \" Add New product \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(52, \"br\")(53, \"br\");\n        i0.ɵɵelementStart(54, \"p\", 33);\n        i0.ɵɵtext(55);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(25);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.selectedCategoryName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.Categories);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngClass\", ctx.isAccountCreated ? \"text-success pb-1\" : \"text-danger pb-1\");\n        i0.ɵɵadvance();\n        i0.ɵɵtextInterpolate1(\" \", ctx.Message, \" \");\n      }\n    },\n    dependencies: [i6.NgClass, i6.NgForOf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","Validators","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","category_r2","categoryName","ɵɵtextInterpolate1","AddProductComponent","constructor","router","fb","addProductService","currentRoute","toastr","headerCustomerService","productsListChanged","isAccountCreated","alert","Message","Products","Categories","form","group","name","required","description","price","quantity","ngOnInit","getAllCategories","Check","descrption","onFileChange","event","inputElement","target","files","length","selectedFile","subscribe","next","res","error","console","log","resetData","nameInput","nativeElement","value","priceInput","descriptionInput","quantityInput","selectedCategoryName","myFileInput","submitForm","checkCategoryName","findCategoryIndex","findIndex","item","categoryId","formData","FormData","append","addProduct","message","productData","products","emit","status","includes","_","ɵɵdirectiveInject","i1","Router","i2","FormBuilder","i3","productService","ActivatedRoute","i4","ToastrService","i5","headerCustomerServices","_2","selectors","viewQuery","AddProductComponent_Query","rf","ctx","ɵɵlistener","AddProductComponent_Template_button_click_0_listener","ɵɵrestoreView","_r1","ɵɵresetView","ɵɵelement","AddProductComponent_Template_form_ngSubmit_14_listener","ɵɵtwoWayListener","AddProductComponent_Template_select_ngModelChange_39_listener","$event","ɵɵtwoWayBindingSet","ɵɵtemplate","AddProductComponent_ng_container_41_Template","AddProductComponent_Template_input_change_45_listener","AddProductComponent_Template_button_click_50_listener","nameInput_r3","ɵɵreference","quantityInput_r4","priceInput_r5","descriptionInput_r6","ɵɵtwoWayProperty"],"sources":["D:\\Angular\\CenterApp\\src\\app\\homepage\\products\\add-product\\add-product.component.ts","D:\\Angular\\CenterApp\\src\\app\\homepage\\products\\add-product\\add-product.component.html"],"sourcesContent":["import { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { productService } from '../products.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { headerCustomerServices } from 'src/app/header-customer/header-customer.service';\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.css'],\n})\nexport class AddProductComponent implements OnInit {\n  @Output() productsListChanged: EventEmitter<any[]> = new EventEmitter<any[]>();\n  isAccountCreated: boolean = false;\n  alert = true;\n  form!: FormGroup;\n  Message = '';\n  selectedFile!: File;\n  base64String!: string;\n  Products: any[] = [];\n  Categories: any[] = [];\n  categoryId!: string;\n  @ViewChild('nameInput', { static: true })\n  nameInput!: ElementRef<HTMLInputElement>;\n  @ViewChild('quantityInput', { static: true })\n  quantityInput!: ElementRef<HTMLInputElement>;\n  @ViewChild('priceInput', { static: true })\n  priceInput!: ElementRef<HTMLInputElement>;\n  @ViewChild('descriptionInput', { static: true })\n  descriptionInput!: ElementRef<HTMLInputElement>;\n  @ViewChild('myFileInput', { static: true })\n  myFileInput!: ElementRef<HTMLInputElement>;\n  selectedCategoryName!: string;\n  constructor(\n    private router: Router,\n    private fb: FormBuilder,\n    private addProductService: productService,\n    private currentRoute: ActivatedRoute,\n    private toastr: ToastrService,\n    private headerCustomerService: headerCustomerServices\n  ) {\n    this.form = this.fb.group({\n      name: [null, [Validators.required], []],\n      description: [null, [Validators.required], []],\n      price: [null, [Validators.required], []],\n      quantity: [null, [Validators.required], []],\n      categoryName: [null, [Validators.required], []],\n    });\n  }\n  ngOnInit(): void {\n    this.getAllCategories();\n  }\n  Check(name: string, price: string, quantity: string, descrption: string) {\n    if (name !== '' && price !== '' && quantity !== '' && descrption !== '') {\n      this.alert = true;\n      return true;\n    }\n    this.Message = 'Please Fill All The Fields';\n    return false;\n  }\n  onFileChange(event: Event) {\n    const inputElement = event.target as HTMLInputElement;\n    if (inputElement.files && inputElement.files.length > 0) {\n      this.selectedFile = inputElement.files[0];\n    }\n  }\n  getAllCategories() {\n    this.headerCustomerService.getAllCategories().subscribe({\n      next: (res) => {\n        this.Categories = res;\n      },\n      error: (error) => {\n        console.log('No Categories Found');\n      },\n    });\n  }\n  resetData() {\n    this.Message = ''\n    this.isAccountCreated = false\n    this.nameInput.nativeElement.value = '';\n    this.priceInput.nativeElement.value = '';\n    this.descriptionInput.nativeElement.value = '';\n    this.quantityInput.nativeElement.value = '';\n    this.selectedCategoryName = '';\n    this.myFileInput.nativeElement.value = '';\n  }\n  public submitForm() {\n    let checkCategoryName = this.form.value.categoryName;\n    const findCategoryIndex = this.Categories.findIndex(\n      (item) => item.categoryName === checkCategoryName\n    );\n    if (findCategoryIndex !== -1) {\n      this.categoryId = this.Categories[findCategoryIndex].categoryId;\n      if (this.selectedFile) {\n        const formData = new FormData();\n        formData.append('Name', this.form.value.name);\n        formData.append('Price', this.form.value.price);\n        formData.append('Quantity', this.form.value.quantity);\n        formData.append('Description',this.form.value.description);\n        formData.append('categoryId', this.categoryId);\n        formData.append('ProductImage', this.selectedFile);\n        this.addProductService\n          .addProduct(formData)\n          .subscribe({\n            next: (res: any) => {\n              const message = res.message;\n              const productData = res.products;\n              if(message === \"New Product Is Created Successfully\"){\n                this.Message = 'New Product created Successfully!';\n                this.isAccountCreated = true;\n                this.productsListChanged.emit(productData);\n              }\n              \n            },\n            error: (error) => {\n              if (\n                error.status === 500 &&\n                error.error.includes('This Product already exists')\n              ) {\n                this.Message = 'Product Already Exists';\n                this.isAccountCreated = false;\n                this.resetData();\n              }\n            },\n          });\n      } else {\n        this.toastr.error('No File Selected', 'Error');\n      }\n    } else {\n      this.toastr.error(\"Category Doesn't Exist\", 'Error');\n      this.nameInput.nativeElement.value = '';\n      this.resetData();\n    }\n  }\n}\n","\r\n<button type=\"button\" class=\"btn btn-primary\" (click)=\"resetData()\" data-bs-toggle=\"modal\"  data-bs-target=\"#addUserModal\">\r\n  Add New Product\r\n</button>\r\n<br />\r\n<br />\r\n<div\r\n  class=\"modal\"\r\n  id=\"addUserModal\"\r\n  tabindex=\"-1\"\r\n  role=\"dialog\"\r\n  aria-labelledby=\"addUserModalLabel\"\r\n  aria-hidden=\"true\"\r\n>\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"close p-2 mt-1\"\r\n          data-bs-dismiss=\"modal\"\r\n          aria-label=\"Close\"\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n        <h4 class=\"modal-title\" id=\"addUserModalLabel\" >Add New Product</h4>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\r\n          <div class=\"form-group\">\r\n            <label for=\"name\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              formControlName=\"name\"\r\n              id=\"name\"\r\n              class=\"form-control\"\r\n              placeholder=\"Please enter a Product Name\"\r\n              #nameInput\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"quantity\">Quantity</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"quantity\"\r\n              formControlName=\"quantity\"\r\n              class=\"form-control\"\r\n              placeholder=\"Please enter the Quantity\"\r\n              #quantityInput\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"price\">Price</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"price\"\r\n              class=\"form-control\"\r\n              formControlName=\"price\"\r\n              placeholder=\"Please enter the Price\"\r\n              #priceInput\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"description\">Description</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"description\"\r\n              class=\"form-control\"\r\n              formControlName=\"description\"\r\n              placeholder=\"Give the product some Description\"\r\n              #descriptionInput\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n          <label for=\"Category\">Choose Category</label>\r\n          <div class=\"custom-select\">\r\n            <select\r\n              id=\"categoryName\"\r\n              class=\"form-control mr-3\"\r\n              name=\"categoryName\"\r\n              formControlName=\"categoryName\"\r\n              [(ngModel)]=\"selectedCategoryName\"\r\n            \r\n            >\r\n            <option class=\"d-none\"></option>\r\n              <ng-container *ngFor=\"let category of Categories\">\r\n                <ng-container >\r\n                  <option [value]=\"category.categoryName\">\r\n                    {{ category.categoryName }}\r\n                  </option>\r\n                </ng-container>\r\n              </ng-container>\r\n       \r\n            </select>\r\n          </div>\r\n        </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"photo\">Photo</label>\r\n            <input\r\n              type=\"file\"\r\n              (change)=\"onFileChange($event)\"\r\n              name=\"photo\"\r\n              id=\"photo\"\r\n              class=\"form-control\"\r\n              accept=\"image/*\"\r\n              #myFileInput\r\n              \r\n            />\r\n          </div>\r\n\r\n          <br />\r\n          <br />\r\n          <div class=\"button-container d-flex justify-content-end\">\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn btn-success\"\r\n              (click)=\"\r\n                Check(\r\n                  descriptionInput.value,\r\n                  nameInput.value,\r\n                  priceInput.value,\r\n                  quantityInput.value\r\n                )\r\n              \"\r\n            >\r\n              Add New product\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <br>\r\n        <br>\r\n        <p\r\n          class=\"text-center fs-3\"\r\n          [ngClass]=\"\r\n            isAccountCreated ? 'text-success pb-1' : 'text-danger pb-1'\r\n          \"\r\n        >\r\n          {{ Message }}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../environment\";\nexport class customerOrderService {\n  constructor(http, glovalEnv) {\n    this.http = http;\n    this.glovalEnv = glovalEnv;\n  }\n  ngOnInit() {}\n  AddNewOrder(Order) {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    });\n    return this.http.post(this.glovalEnv.url + 'Order/addOrder', {\n      productId: Order[0][0],\n      Price: Order[0][1],\n      Quantity: Order[0][2],\n      customerId: Order[0][3]\n    }, {\n      headers,\n      responseType: 'text'\n    });\n  }\n  static #_ = this.ɵfac = function customerOrderService_Factory(t) {\n    return new (t || customerOrderService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.GlobalEnvironment));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: customerOrderService,\n    factory: customerOrderService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","customerOrderService","constructor","http","glovalEnv","ngOnInit","AddNewOrder","Order","token","localStorage","getItem","headers","Authorization","post","url","productId","Price","Quantity","customerId","responseType","_","i0","ɵɵinject","i1","HttpClient","i2","GlobalEnvironment","_2","factory","ɵfac","providedIn"],"sources":["D:\\Angular\\CenterApp\\src\\app\\customer\\customerOrder.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable, OnInit } from '@angular/core';\r\nimport { GlobalEnvironment } from '../environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class customerOrderService implements OnInit {\r\n  constructor(private http: HttpClient, private glovalEnv: GlobalEnvironment) {}\r\n  ngOnInit() {}\r\n  public AddNewOrder(Order: string[][]) {\r\n    const token = localStorage.getItem('token');\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    });\r\n\r\n    return this.http.post(\r\n      this.glovalEnv.url + 'Order/addOrder',\r\n      {\r\n        productId: Order[0][0],\r\n        Price: Order[0][1],\r\n        Quantity: Order[0][2],\r\n        customerId: Order[0][3],\r\n      },\r\n      { headers, responseType: 'text' }\r\n    );\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;;AAO9D,OAAM,MAAOC,oBAAoB;EAC/BC,YAAoBC,IAAgB,EAAUC,SAA4B;IAAtD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,SAAS,GAATA,SAAS;EAAsB;EAC7EC,QAAQA,CAAA,GAAI;EACLC,WAAWA,CAACC,KAAiB;IAClC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,OAAO,GAAG,IAAIX,WAAW,CAAC;MAC9B,cAAc,EAAE,kBAAkB;MAClCY,aAAa,EAAE,UAAUJ,KAAK;KAC/B,CAAC;IAEF,OAAO,IAAI,CAACL,IAAI,CAACU,IAAI,CACnB,IAAI,CAACT,SAAS,CAACU,GAAG,GAAG,gBAAgB,EACrC;MACEC,SAAS,EAAER,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtBS,KAAK,EAAET,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClBU,QAAQ,EAAEV,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrBW,UAAU,EAAEX,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;KACvB,EACD;MAAEI,OAAO;MAAEQ,YAAY,EAAE;IAAM,CAAE,CAClC;EACH;EAAC,QAAAC,CAAA,G;qBApBUnB,oBAAoB,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,iBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAApB1B,oBAAoB;IAAA2B,OAAA,EAApB3B,oBAAoB,CAAA4B,IAAA;IAAAC,UAAA,EAFnB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./login.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_p_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 12);\n    i0.ɵɵtext(1, \" Fill All The Fields! \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", !ctx_r1.showAlert ? \"text-success pb-1\" : \"text-danger pb-1\");\n  }\n}\nexport class LoginComponent {\n  constructor(fb, service, router, currentRoute) {\n    this.fb = fb;\n    this.service = service;\n    this.router = router;\n    this.currentRoute = currentRoute;\n    this.Message = '';\n    this.isAccountCreated = false;\n    this.alert = '';\n    this.showAlert = false;\n    this.form = this.fb.group({\n      name: [null, [Validators.required], []],\n      password: [null, [Validators.required], []]\n    });\n  }\n  ngOnInit() {\n    localStorage.clear();\n  }\n  LoginAdmin() {\n    if (this.form.invalid) {\n      this.showAlert = true;\n      this.Message = '';\n      return;\n    }\n    var name = this.form.value.name;\n    var password = this.form.value.password;\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"password\", password);\n    this.service.LoginAdmin(formData).subscribe({\n      next: res => {\n        const responseObj = JSON.parse(res);\n        const token = responseObj.token;\n        if (responseObj.status === 200) {\n          this.Message = 'Welcome To Your Dashboard!';\n          this.isAccountCreated = true;\n          this.service.setMessage('Welcome to your dashboard!');\n          const token = responseObj.token;\n          localStorage.setItem('token', token);\n          localStorage.setItem('admin', \"true\");\n          this.router.navigateByUrl('/Homepage');\n        }\n      },\n      error: error => {\n        if (error.status === 500 || error.error.includes('Wrong Credentials, Try Again.')) {\n          this.Message = 'Wrong Credintials, Try Again.';\n          this.showAlert = false;\n          this.isAccountCreated = false;\n        }\n      }\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.LoginServices), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 23,\n    vars: 4,\n    consts: [[\"nameinput\", \"\"], [\"passwordinput\", \"\"], [1, \"container\"], [1, \"row\"], [1, \"col-md-12\", \"login-form\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"name\", \"id\", \"name\", \"required\", \"\", \"placeholder\", \"Please enter your Name\", \"value\", \"\", 1, \"form-control\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"password\", \"required\", \"\", \"placeholder\", \"Please enter your Password\", \"value\", \"\", 1, \"form-control\"], [1, \"btn\", \"btn-primary\"], [\"href\", \"#\", 1, \"ForgetPwd\"], [\"class\", \"text-center fs-3\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"text-center\", \"fs-3\", 3, \"ngClass\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"body\")(1, \"div\", 2)(2, \"div\", 3)(3, \"div\", 4)(4, \"h3\");\n        i0.ɵɵtext(5, \"Login!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.LoginAdmin());\n        });\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵelement(8, \"input\", 7, 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 6);\n        i0.ɵɵelement(11, \"input\", 8, 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 9);\n        i0.ɵɵtext(14, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"br\")(16, \"br\");\n        i0.ɵɵelementStart(17, \"div\", 6)(18, \"a\", 10);\n        i0.ɵɵtext(19, \"Forget Password ?\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(20, LoginComponent_p_20_Template, 2, 1, \"p\", 11);\n        i0.ɵɵelementStart(21, \"p\", 12);\n        i0.ɵɵtext(22);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngIf\", ctx.showAlert);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngClass\", ctx.isAccountCreated ? \"text-success pb-1\" : \"text-danger pb-1\");\n        i0.ɵɵadvance();\n        i0.ɵɵtextInterpolate1(\" \", ctx.Message, \" \");\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\t\\\"use strict\\\";\\n\\n \\t\\n\\n \\t\\n\\n })()[_ngcontent-%COMP%]\\n;\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r1","showAlert","LoginComponent","constructor","fb","service","router","currentRoute","Message","isAccountCreated","alert","form","group","name","required","password","ngOnInit","localStorage","clear","LoginAdmin","invalid","value","formData","FormData","append","subscribe","next","res","responseObj","JSON","parse","token","status","setMessage","setItem","navigateByUrl","error","includes","_","ɵɵdirectiveInject","i1","FormBuilder","i2","LoginServices","i3","Router","ActivatedRoute","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_6_listener","ɵɵrestoreView","_r1","ɵɵresetView","ɵɵelement","ɵɵtemplate","LoginComponent_p_20_Template","ɵɵadvance","ɵɵtextInterpolate1"],"sources":["D:\\Angular\\CenterApp\\src\\app\\login\\login.component.ts","D:\\Angular\\CenterApp\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GlobalEnvironment } from '../environment';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\nimport { LoginServices } from './login.service';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  form!: FormGroup;\n  Message = '';\n  isAccountCreated: boolean = false;\n  alert = '';\n  showAlert: boolean = false;\n  constructor(\n    private fb: FormBuilder,\n    private service: LoginServices,\n    private router: Router,\n    private currentRoute: ActivatedRoute\n  ) {\n    this.form = this.fb.group({\n      name: [null, [Validators.required], []],\n      password: [null, [Validators.required], []],\n    });\n  }\n  ngOnInit() {\n    localStorage.clear()\n  }\n\n  LoginAdmin() {\n    if (this.form.invalid) {\n      this.showAlert = true;\n      this.Message = '';\n      return;\n    }\n    var name = this.form.value.name \n    var password = this.form.value.password\n    const formData = new FormData()\n    formData.append(\"name\", name) \n    formData.append(\"password\", password)  \n \n\n    this.service\n      .LoginAdmin(formData)\n      .subscribe(\n        {\n       next: (res) => {\n          const responseObj = JSON.parse(res);\n          const token = responseObj.token;\n          if (responseObj.status === 200) {\n            this.Message = 'Welcome To Your Dashboard!';\n            this.isAccountCreated = true;\n            this.service.setMessage('Welcome to your dashboard!');\n            const token = responseObj.token;\n            localStorage.setItem('token', token);\n            localStorage.setItem('admin', \"true\")\n            this.router.navigateByUrl('/Homepage');\n          }\n        },\n        error: (error) => {\n\n          if (\n            error.status === 500 ||\n            error.error.includes('Wrong Credentials, Try Again.')\n          ) {\n            this.Message = 'Wrong Credintials, Try Again.';\n            this.showAlert = false;\n            this.isAccountCreated = false;\n          }\n        }\n  });\n  }\n}\n","<body>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-12 login-form\">\n        <h3>Login!</h3>\n        <form [formGroup]=\"form\" (ngSubmit)=\"LoginAdmin()\">\n          <div class=\"form-group\">\n            <input\n              type=\"text\"\n              formControlName=\"name\"\n              id=\"name\"\n              class=\"form-control\"\n              required\n              placeholder=\"Please enter your Name\"\n              value=\"\"\n              #nameinput\n            />\n          </div>\n          <div class=\"form-group\">\n            <input\n              type=\"password\"\n              formControlName=\"password\"\n              id=\"password\"\n              class=\"form-control\"\n              required\n              placeholder=\"Please enter your Password\"\n              value=\"\"\n              #passwordinput\n            />\n          </div>\n\n          <button class=\"btn btn-primary\">Login</button>\n          <br />\n          <br />\n          <div class=\"form-group\">\n            <a href=\"#\" class=\"ForgetPwd\">Forget Password ?</a>\n          </div>\n        </form>\n        <p\n          *ngIf=\"showAlert\"\n          class=\"text-center fs-3\"\n          [ngClass]=\"!showAlert ? 'text-success pb-1' : 'text-danger pb-1'\"\n        >\n          Fill All The Fields!\n        </p>\n        <p\n          class=\"text-center fs-3\"\n          [ngClass]=\"\n            isAccountCreated ? 'text-success pb-1' : 'text-danger pb-1'\n          \"\n        >\n          {{ Message }}\n        </p>\n      </div>\n    </div>\n  </div>\n</body>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
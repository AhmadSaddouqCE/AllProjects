{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./login/login.service\";\nimport * as i2 from \"@angular/router\";\nexport class CustomerAuthGuard {\n  constructor(loginService, router) {\n    this.loginService = loginService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (this.loginService.isLoggedInCustomer()) {\n      return true;\n    } else {\n      return this.router.parseUrl('/Customer-Login');\n    }\n  }\n  static #_ = this.ɵfac = function CustomerAuthGuard_Factory(t) {\n    return new (t || CustomerAuthGuard)(i0.ɵɵinject(i1.LoginServices), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CustomerAuthGuard,\n    factory: CustomerAuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["CustomerAuthGuard","constructor","loginService","router","canActivate","route","state","isLoggedInCustomer","parseUrl","_","i0","ɵɵinject","i1","LoginServices","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["D:\\Angular\\CenterApp\\src\\app\\CustomerGuard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  Router,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n  CanActivate,\r\n  CanActivateFn,\r\n} from '@angular/router';\r\nimport { LoginServices } from './login/login.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CustomerAuthGuard implements CanActivate {\r\n  constructor(private loginService: LoginServices, private router: Router) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | boolean\r\n    | UrlTree\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree> {\r\n    if (this.loginService.isLoggedInCustomer()) {\r\n      return true;\r\n    } else {\r\n      return this.router.parseUrl('/Customer-Login');\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;;AAeA,OAAM,MAAOA,iBAAiB;EAC5BC,YAAoBC,YAA2B,EAAUC,MAAc;IAAnD,KAAAD,YAAY,GAAZA,YAAY;IAAyB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAE1EC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAM1B,IAAI,IAAI,CAACJ,YAAY,CAACK,kBAAkB,EAAE,EAAE;MAC1C,OAAO,IAAI;IACb,CAAC,MAAM;MACL,OAAO,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,iBAAiB,CAAC;IAChD;EACF;EAAC,QAAAC,CAAA,G;qBAhBUT,iBAAiB,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,aAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBhB,iBAAiB;IAAAiB,OAAA,EAAjBjB,iBAAiB,CAAAkB,IAAA;IAAAC,UAAA,EAFhB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}